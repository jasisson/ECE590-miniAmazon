// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ups.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UConnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UConnect> {
} _UConnect_default_instance_;
class UConnectedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UConnected> {
} _UConnected_default_instance_;
class UGoPickupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UGoPickup> {
} _UGoPickup_default_instance_;
class UFinishedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UFinished> {
} _UFinished_default_instance_;
class UDeliveryMadeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UDeliveryMade> {
} _UDeliveryMade_default_instance_;
class UDeliveryLocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UDeliveryLocation> {
} _UDeliveryLocation_default_instance_;
class UGoDeliverDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UGoDeliver> {
} _UGoDeliver_default_instance_;
class UCommandsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UCommands> {
} _UCommands_default_instance_;
class UResponsesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UResponses> {
} _UResponses_default_instance_;

namespace protobuf_ups_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnect, reconnectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnect, numtrucksinit_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnected, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UConnected, error_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoPickup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoPickup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoPickup, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoPickup, whid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UFinished, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UFinished, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UFinished, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UFinished, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryMade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryMade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryMade, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryMade, packageid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryLocation, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryLocation, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UDeliveryLocation, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoDeliver, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoDeliver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoDeliver, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UGoDeliver, packages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, deliveries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, pickups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, simspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCommands, disconnect_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, completions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, delivered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UResponses, finished_),
  ~0u,
  ~0u,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(UConnect)},
  { 8, 14, sizeof(UConnected)},
  { 16, 22, sizeof(UGoPickup)},
  { 24, 31, sizeof(UFinished)},
  { 34, 40, sizeof(UDeliveryMade)},
  { 42, 49, sizeof(UDeliveryLocation)},
  { 52, 58, sizeof(UGoDeliver)},
  { 60, 68, sizeof(UCommands)},
  { 72, 80, sizeof(UResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UGoPickup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UFinished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UDeliveryMade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UDeliveryLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UGoDeliver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UResponses_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ups.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _UConnect_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UConnected_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _UGoPickup_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _UFinished_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _UDeliveryMade_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UDeliveryLocation_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _UGoDeliver_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _UCommands_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UResponses_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UConnect_default_instance_.DefaultConstruct();
  _UConnected_default_instance_.DefaultConstruct();
  _UGoPickup_default_instance_.DefaultConstruct();
  _UFinished_default_instance_.DefaultConstruct();
  _UDeliveryMade_default_instance_.DefaultConstruct();
  _UDeliveryLocation_default_instance_.DefaultConstruct();
  _UGoDeliver_default_instance_.DefaultConstruct();
  _UCommands_default_instance_.DefaultConstruct();
  _UResponses_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tups.proto\"6\n\010UConnect\022\023\n\013reconnectid\030\001"
      " \001(\003\022\025\n\rnumtrucksinit\030\002 \001(\005\",\n\nUConnecte"
      "d\022\017\n\007worldid\030\001 \002(\003\022\r\n\005error\030\002 \001(\t\"*\n\tUGo"
      "Pickup\022\017\n\007truckid\030\001 \002(\005\022\014\n\004whid\030\002 \002(\005\"2\n"
      "\tUFinished\022\017\n\007truckid\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t"
      "\n\001y\030\003 \002(\005\"3\n\rUDeliveryMade\022\017\n\007truckid\030\001 "
      "\002(\005\022\021\n\tpackageid\030\002 \002(\003\"<\n\021UDeliveryLocat"
      "ion\022\021\n\tpackageid\030\001 \002(\003\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003"
      " \002(\005\"C\n\nUGoDeliver\022\017\n\007truckid\030\001 \002(\005\022$\n\010p"
      "ackages\030\002 \003(\0132\022.UDeliveryLocation\"o\n\tUCo"
      "mmands\022\037\n\ndeliveries\030\001 \003(\0132\013.UGoDeliver\022"
      "\033\n\007pickups\030\002 \003(\0132\n.UGoPickup\022\020\n\010simspeed"
      "\030\003 \001(\r\022\022\n\ndisconnect\030\004 \001(\010\"q\n\nUResponses"
      "\022\037\n\013completions\030\001 \003(\0132\n.UFinished\022!\n\tdel"
      "ivered\030\002 \003(\0132\016.UDeliveryMade\022\r\n\005error\030\003 "
      "\001(\t\022\020\n\010finished\030\004 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 621);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ups.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ups_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UConnect::kReconnectidFieldNumber;
const int UConnect::kNumtrucksinitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UConnect::UConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UConnect)
}
UConnect::UConnect(const UConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reconnectid_, &from.reconnectid_,
    reinterpret_cast<char*>(&numtrucksinit_) -
    reinterpret_cast<char*>(&reconnectid_) + sizeof(numtrucksinit_));
  // @@protoc_insertion_point(copy_constructor:UConnect)
}

void UConnect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reconnectid_, 0, reinterpret_cast<char*>(&numtrucksinit_) -
    reinterpret_cast<char*>(&reconnectid_) + sizeof(numtrucksinit_));
}

UConnect::~UConnect() {
  // @@protoc_insertion_point(destructor:UConnect)
  SharedDtor();
}

void UConnect::SharedDtor() {
}

void UConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UConnect::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[0].descriptor;
}

const UConnect& UConnect::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UConnect* UConnect::New(::google::protobuf::Arena* arena) const {
  UConnect* n = new UConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:UConnect)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&reconnectid_, 0, reinterpret_cast<char*>(&numtrucksinit_) -
      reinterpret_cast<char*>(&reconnectid_) + sizeof(numtrucksinit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 reconnectid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_reconnectid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reconnectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 numtrucksinit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_numtrucksinit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtrucksinit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UConnect)
  return false;
#undef DO_
}

void UConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UConnect)
  // optional int64 reconnectid = 1;
  if (has_reconnectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->reconnectid(), output);
  }

  // optional int32 numtrucksinit = 2;
  if (has_numtrucksinit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numtrucksinit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UConnect)
}

::google::protobuf::uint8* UConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UConnect)
  // optional int64 reconnectid = 1;
  if (has_reconnectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->reconnectid(), target);
  }

  // optional int32 numtrucksinit = 2;
  if (has_numtrucksinit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numtrucksinit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UConnect)
  return target;
}

size_t UConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 reconnectid = 1;
    if (has_reconnectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reconnectid());
    }

    // optional int32 numtrucksinit = 2;
    if (has_numtrucksinit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numtrucksinit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const UConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UConnect)
    MergeFrom(*source);
  }
}

void UConnect::MergeFrom(const UConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_reconnectid()) {
      set_reconnectid(from.reconnectid());
    }
    if (from.has_numtrucksinit()) {
      set_numtrucksinit(from.numtrucksinit());
    }
  }
}

void UConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UConnect::CopyFrom(const UConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UConnect::IsInitialized() const {
  return true;
}

void UConnect::Swap(UConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UConnect::InternalSwap(UConnect* other) {
  std::swap(reconnectid_, other->reconnectid_);
  std::swap(numtrucksinit_, other->numtrucksinit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UConnect::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UConnect

// optional int64 reconnectid = 1;
bool UConnect::has_reconnectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UConnect::set_has_reconnectid() {
  _has_bits_[0] |= 0x00000001u;
}
void UConnect::clear_has_reconnectid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UConnect::clear_reconnectid() {
  reconnectid_ = GOOGLE_LONGLONG(0);
  clear_has_reconnectid();
}
::google::protobuf::int64 UConnect::reconnectid() const {
  // @@protoc_insertion_point(field_get:UConnect.reconnectid)
  return reconnectid_;
}
void UConnect::set_reconnectid(::google::protobuf::int64 value) {
  set_has_reconnectid();
  reconnectid_ = value;
  // @@protoc_insertion_point(field_set:UConnect.reconnectid)
}

// optional int32 numtrucksinit = 2;
bool UConnect::has_numtrucksinit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UConnect::set_has_numtrucksinit() {
  _has_bits_[0] |= 0x00000002u;
}
void UConnect::clear_has_numtrucksinit() {
  _has_bits_[0] &= ~0x00000002u;
}
void UConnect::clear_numtrucksinit() {
  numtrucksinit_ = 0;
  clear_has_numtrucksinit();
}
::google::protobuf::int32 UConnect::numtrucksinit() const {
  // @@protoc_insertion_point(field_get:UConnect.numtrucksinit)
  return numtrucksinit_;
}
void UConnect::set_numtrucksinit(::google::protobuf::int32 value) {
  set_has_numtrucksinit();
  numtrucksinit_ = value;
  // @@protoc_insertion_point(field_set:UConnect.numtrucksinit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UConnected::kWorldidFieldNumber;
const int UConnected::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UConnected::UConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UConnected)
}
UConnected::UConnected(const UConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:UConnected)
}

void UConnected::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worldid_ = GOOGLE_LONGLONG(0);
}

UConnected::~UConnected() {
  // @@protoc_insertion_point(destructor:UConnected)
  SharedDtor();
}

void UConnected::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UConnected::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[1].descriptor;
}

const UConnected& UConnected::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UConnected* UConnected::New(::google::protobuf::Arena* arena) const {
  UConnected* n = new UConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:UConnected)
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UConnected.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UConnected)
  return false;
#undef DO_
}

void UConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UConnected)
  // required int64 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UConnected.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UConnected)
}

::google::protobuf::uint8* UConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UConnected)
  // required int64 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UConnected.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UConnected)
  return target;
}

size_t UConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const UConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UConnected)
    MergeFrom(*source);
  }
}

void UConnected::MergeFrom(const UConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_error()) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (from.has_worldid()) {
      set_worldid(from.worldid());
    }
  }
}

void UConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UConnected::CopyFrom(const UConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UConnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void UConnected::Swap(UConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UConnected::InternalSwap(UConnected* other) {
  error_.Swap(&other->error_);
  std::swap(worldid_, other->worldid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UConnected::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UConnected

// required int64 worldid = 1;
bool UConnected::has_worldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UConnected::set_has_worldid() {
  _has_bits_[0] |= 0x00000002u;
}
void UConnected::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UConnected::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
::google::protobuf::int64 UConnected::worldid() const {
  // @@protoc_insertion_point(field_get:UConnected.worldid)
  return worldid_;
}
void UConnected::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UConnected.worldid)
}

// optional string error = 2;
bool UConnected::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UConnected::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void UConnected::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void UConnected::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& UConnected::error() const {
  // @@protoc_insertion_point(field_get:UConnected.error)
  return error_.GetNoArena();
}
void UConnected::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UConnected.error)
}
#if LANG_CXX11
void UConnected::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UConnected.error)
}
#endif
void UConnected::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UConnected.error)
}
void UConnected::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UConnected.error)
}
::std::string* UConnected::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:UConnected.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UConnected::release_error() {
  // @@protoc_insertion_point(field_release:UConnected.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UConnected::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:UConnected.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UGoPickup::kTruckidFieldNumber;
const int UGoPickup::kWhidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UGoPickup::UGoPickup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UGoPickup)
}
UGoPickup::UGoPickup(const UGoPickup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    reinterpret_cast<char*>(&whid_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(whid_));
  // @@protoc_insertion_point(copy_constructor:UGoPickup)
}

void UGoPickup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&truckid_, 0, reinterpret_cast<char*>(&whid_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(whid_));
}

UGoPickup::~UGoPickup() {
  // @@protoc_insertion_point(destructor:UGoPickup)
  SharedDtor();
}

void UGoPickup::SharedDtor() {
}

void UGoPickup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UGoPickup::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[2].descriptor;
}

const UGoPickup& UGoPickup::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UGoPickup* UGoPickup::New(::google::protobuf::Arena* arena) const {
  UGoPickup* n = new UGoPickup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UGoPickup::Clear() {
// @@protoc_insertion_point(message_clear_start:UGoPickup)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&truckid_, 0, reinterpret_cast<char*>(&whid_) -
      reinterpret_cast<char*>(&truckid_) + sizeof(whid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UGoPickup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UGoPickup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UGoPickup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UGoPickup)
  return false;
#undef DO_
}

void UGoPickup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UGoPickup)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 whid = 2;
  if (has_whid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UGoPickup)
}

::google::protobuf::uint8* UGoPickup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UGoPickup)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 whid = 2;
  if (has_whid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UGoPickup)
  return target;
}

size_t UGoPickup::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UGoPickup)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  return total_size;
}
size_t UGoPickup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UGoPickup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UGoPickup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UGoPickup)
  GOOGLE_DCHECK_NE(&from, this);
  const UGoPickup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UGoPickup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UGoPickup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UGoPickup)
    MergeFrom(*source);
  }
}

void UGoPickup::MergeFrom(const UGoPickup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UGoPickup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_whid()) {
      set_whid(from.whid());
    }
  }
}

void UGoPickup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UGoPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UGoPickup::CopyFrom(const UGoPickup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UGoPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UGoPickup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UGoPickup::Swap(UGoPickup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UGoPickup::InternalSwap(UGoPickup* other) {
  std::swap(truckid_, other->truckid_);
  std::swap(whid_, other->whid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UGoPickup::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UGoPickup

// required int32 truckid = 1;
bool UGoPickup::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UGoPickup::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void UGoPickup::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UGoPickup::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 UGoPickup::truckid() const {
  // @@protoc_insertion_point(field_get:UGoPickup.truckid)
  return truckid_;
}
void UGoPickup::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UGoPickup.truckid)
}

// required int32 whid = 2;
bool UGoPickup::has_whid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UGoPickup::set_has_whid() {
  _has_bits_[0] |= 0x00000002u;
}
void UGoPickup::clear_has_whid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UGoPickup::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
::google::protobuf::int32 UGoPickup::whid() const {
  // @@protoc_insertion_point(field_get:UGoPickup.whid)
  return whid_;
}
void UGoPickup::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:UGoPickup.whid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UFinished::kTruckidFieldNumber;
const int UFinished::kXFieldNumber;
const int UFinished::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UFinished::UFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UFinished)
}
UFinished::UFinished(const UFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UFinished)
}

void UFinished::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&truckid_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(y_));
}

UFinished::~UFinished() {
  // @@protoc_insertion_point(destructor:UFinished)
  SharedDtor();
}

void UFinished::SharedDtor() {
}

void UFinished::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UFinished::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[3].descriptor;
}

const UFinished& UFinished::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UFinished* UFinished::New(::google::protobuf::Arena* arena) const {
  UFinished* n = new UFinished;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:UFinished)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&truckid_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&truckid_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UFinished)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UFinished)
  return false;
#undef DO_
}

void UFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UFinished)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UFinished)
}

::google::protobuf::uint8* UFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UFinished)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UFinished)
  return target;
}

size_t UFinished::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UFinished)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UFinished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const UFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UFinished)
    MergeFrom(*source);
  }
}

void UFinished::MergeFrom(const UFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void UFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UFinished::CopyFrom(const UFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UFinished::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UFinished::Swap(UFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UFinished::InternalSwap(UFinished* other) {
  std::swap(truckid_, other->truckid_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UFinished::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UFinished

// required int32 truckid = 1;
bool UFinished::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UFinished::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void UFinished::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UFinished::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 UFinished::truckid() const {
  // @@protoc_insertion_point(field_get:UFinished.truckid)
  return truckid_;
}
void UFinished::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UFinished.truckid)
}

// required int32 x = 2;
bool UFinished::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UFinished::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void UFinished::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void UFinished::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 UFinished::x() const {
  // @@protoc_insertion_point(field_get:UFinished.x)
  return x_;
}
void UFinished::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UFinished.x)
}

// required int32 y = 3;
bool UFinished::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UFinished::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void UFinished::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void UFinished::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 UFinished::y() const {
  // @@protoc_insertion_point(field_get:UFinished.y)
  return y_;
}
void UFinished::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UFinished.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDeliveryMade::kTruckidFieldNumber;
const int UDeliveryMade::kPackageidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDeliveryMade::UDeliveryMade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UDeliveryMade)
}
UDeliveryMade::UDeliveryMade(const UDeliveryMade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UDeliveryMade)
}

void UDeliveryMade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(truckid_));
}

UDeliveryMade::~UDeliveryMade() {
  // @@protoc_insertion_point(destructor:UDeliveryMade)
  SharedDtor();
}

void UDeliveryMade::SharedDtor() {
}

void UDeliveryMade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UDeliveryMade::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[4].descriptor;
}

const UDeliveryMade& UDeliveryMade::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UDeliveryMade* UDeliveryMade::New(::google::protobuf::Arena* arena) const {
  UDeliveryMade* n = new UDeliveryMade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UDeliveryMade::Clear() {
// @@protoc_insertion_point(message_clear_start:UDeliveryMade)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UDeliveryMade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UDeliveryMade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UDeliveryMade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UDeliveryMade)
  return false;
#undef DO_
}

void UDeliveryMade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UDeliveryMade)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int64 packageid = 2;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->packageid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UDeliveryMade)
}

::google::protobuf::uint8* UDeliveryMade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UDeliveryMade)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int64 packageid = 2;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->packageid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UDeliveryMade)
  return target;
}

size_t UDeliveryMade::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UDeliveryMade)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UDeliveryMade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UDeliveryMade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UDeliveryMade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UDeliveryMade)
  GOOGLE_DCHECK_NE(&from, this);
  const UDeliveryMade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDeliveryMade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UDeliveryMade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UDeliveryMade)
    MergeFrom(*source);
  }
}

void UDeliveryMade::MergeFrom(const UDeliveryMade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UDeliveryMade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
  }
}

void UDeliveryMade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UDeliveryMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDeliveryMade::CopyFrom(const UDeliveryMade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UDeliveryMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDeliveryMade::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UDeliveryMade::Swap(UDeliveryMade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDeliveryMade::InternalSwap(UDeliveryMade* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(truckid_, other->truckid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UDeliveryMade::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UDeliveryMade

// required int32 truckid = 1;
bool UDeliveryMade::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UDeliveryMade::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
void UDeliveryMade::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UDeliveryMade::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 UDeliveryMade::truckid() const {
  // @@protoc_insertion_point(field_get:UDeliveryMade.truckid)
  return truckid_;
}
void UDeliveryMade::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryMade.truckid)
}

// required int64 packageid = 2;
bool UDeliveryMade::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UDeliveryMade::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void UDeliveryMade::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UDeliveryMade::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 UDeliveryMade::packageid() const {
  // @@protoc_insertion_point(field_get:UDeliveryMade.packageid)
  return packageid_;
}
void UDeliveryMade::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryMade.packageid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDeliveryLocation::kPackageidFieldNumber;
const int UDeliveryLocation::kXFieldNumber;
const int UDeliveryLocation::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDeliveryLocation::UDeliveryLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UDeliveryLocation)
}
UDeliveryLocation::UDeliveryLocation(const UDeliveryLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UDeliveryLocation)
}

void UDeliveryLocation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(y_));
}

UDeliveryLocation::~UDeliveryLocation() {
  // @@protoc_insertion_point(destructor:UDeliveryLocation)
  SharedDtor();
}

void UDeliveryLocation::SharedDtor() {
}

void UDeliveryLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UDeliveryLocation::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[5].descriptor;
}

const UDeliveryLocation& UDeliveryLocation::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UDeliveryLocation* UDeliveryLocation::New(::google::protobuf::Arena* arena) const {
  UDeliveryLocation* n = new UDeliveryLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UDeliveryLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:UDeliveryLocation)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UDeliveryLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UDeliveryLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UDeliveryLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UDeliveryLocation)
  return false;
#undef DO_
}

void UDeliveryLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UDeliveryLocation)
  // required int64 packageid = 1;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UDeliveryLocation)
}

::google::protobuf::uint8* UDeliveryLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UDeliveryLocation)
  // required int64 packageid = 1;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UDeliveryLocation)
  return target;
}

size_t UDeliveryLocation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UDeliveryLocation)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UDeliveryLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UDeliveryLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UDeliveryLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UDeliveryLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const UDeliveryLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDeliveryLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UDeliveryLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UDeliveryLocation)
    MergeFrom(*source);
  }
}

void UDeliveryLocation::MergeFrom(const UDeliveryLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UDeliveryLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void UDeliveryLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UDeliveryLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDeliveryLocation::CopyFrom(const UDeliveryLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UDeliveryLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDeliveryLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UDeliveryLocation::Swap(UDeliveryLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDeliveryLocation::InternalSwap(UDeliveryLocation* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UDeliveryLocation::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UDeliveryLocation

// required int64 packageid = 1;
bool UDeliveryLocation::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UDeliveryLocation::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void UDeliveryLocation::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UDeliveryLocation::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 UDeliveryLocation::packageid() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.packageid)
  return packageid_;
}
void UDeliveryLocation::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.packageid)
}

// required int32 x = 2;
bool UDeliveryLocation::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UDeliveryLocation::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void UDeliveryLocation::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void UDeliveryLocation::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 UDeliveryLocation::x() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.x)
  return x_;
}
void UDeliveryLocation::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.x)
}

// required int32 y = 3;
bool UDeliveryLocation::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UDeliveryLocation::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void UDeliveryLocation::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void UDeliveryLocation::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 UDeliveryLocation::y() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.y)
  return y_;
}
void UDeliveryLocation::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UGoDeliver::kTruckidFieldNumber;
const int UGoDeliver::kPackagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UGoDeliver::UGoDeliver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UGoDeliver)
}
UGoDeliver::UGoDeliver(const UGoDeliver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  truckid_ = from.truckid_;
  // @@protoc_insertion_point(copy_constructor:UGoDeliver)
}

void UGoDeliver::SharedCtor() {
  _cached_size_ = 0;
  truckid_ = 0;
}

UGoDeliver::~UGoDeliver() {
  // @@protoc_insertion_point(destructor:UGoDeliver)
  SharedDtor();
}

void UGoDeliver::SharedDtor() {
}

void UGoDeliver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UGoDeliver::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[6].descriptor;
}

const UGoDeliver& UGoDeliver::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UGoDeliver* UGoDeliver::New(::google::protobuf::Arena* arena) const {
  UGoDeliver* n = new UGoDeliver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UGoDeliver::Clear() {
// @@protoc_insertion_point(message_clear_start:UGoDeliver)
  packages_.Clear();
  truckid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UGoDeliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UGoDeliver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UDeliveryLocation packages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UGoDeliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UGoDeliver)
  return false;
#undef DO_
}

void UGoDeliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UGoDeliver)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // repeated .UDeliveryLocation packages = 2;
  for (unsigned int i = 0, n = this->packages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->packages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UGoDeliver)
}

::google::protobuf::uint8* UGoDeliver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UGoDeliver)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // repeated .UDeliveryLocation packages = 2;
  for (unsigned int i = 0, n = this->packages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->packages(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UGoDeliver)
  return target;
}

size_t UGoDeliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UGoDeliver)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 truckid = 1;
  if (has_truckid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }
  // repeated .UDeliveryLocation packages = 2;
  {
    unsigned int count = this->packages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->packages(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UGoDeliver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UGoDeliver)
  GOOGLE_DCHECK_NE(&from, this);
  const UGoDeliver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UGoDeliver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UGoDeliver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UGoDeliver)
    MergeFrom(*source);
  }
}

void UGoDeliver::MergeFrom(const UGoDeliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UGoDeliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packages_.MergeFrom(from.packages_);
  if (from.has_truckid()) {
    set_truckid(from.truckid());
  }
}

void UGoDeliver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UGoDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UGoDeliver::CopyFrom(const UGoDeliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UGoDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UGoDeliver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packages())) return false;
  return true;
}

void UGoDeliver::Swap(UGoDeliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UGoDeliver::InternalSwap(UGoDeliver* other) {
  packages_.UnsafeArenaSwap(&other->packages_);
  std::swap(truckid_, other->truckid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UGoDeliver::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UGoDeliver

// required int32 truckid = 1;
bool UGoDeliver::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UGoDeliver::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void UGoDeliver::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UGoDeliver::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 UGoDeliver::truckid() const {
  // @@protoc_insertion_point(field_get:UGoDeliver.truckid)
  return truckid_;
}
void UGoDeliver::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UGoDeliver.truckid)
}

// repeated .UDeliveryLocation packages = 2;
int UGoDeliver::packages_size() const {
  return packages_.size();
}
void UGoDeliver::clear_packages() {
  packages_.Clear();
}
const ::UDeliveryLocation& UGoDeliver::packages(int index) const {
  // @@protoc_insertion_point(field_get:UGoDeliver.packages)
  return packages_.Get(index);
}
::UDeliveryLocation* UGoDeliver::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:UGoDeliver.packages)
  return packages_.Mutable(index);
}
::UDeliveryLocation* UGoDeliver::add_packages() {
  // @@protoc_insertion_point(field_add:UGoDeliver.packages)
  return packages_.Add();
}
::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >*
UGoDeliver::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:UGoDeliver.packages)
  return &packages_;
}
const ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >&
UGoDeliver::packages() const {
  // @@protoc_insertion_point(field_list:UGoDeliver.packages)
  return packages_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UCommands::kDeliveriesFieldNumber;
const int UCommands::kPickupsFieldNumber;
const int UCommands::kSimspeedFieldNumber;
const int UCommands::kDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UCommands::UCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UCommands)
}
UCommands::UCommands(const UCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      deliveries_(from.deliveries_),
      pickups_(from.pickups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simspeed_, &from.simspeed_,
    reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:UCommands)
}

void UCommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&simspeed_, 0, reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
}

UCommands::~UCommands() {
  // @@protoc_insertion_point(destructor:UCommands)
  SharedDtor();
}

void UCommands::SharedDtor() {
}

void UCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UCommands::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[7].descriptor;
}

const UCommands& UCommands::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UCommands* UCommands::New(::google::protobuf::Arena* arena) const {
  UCommands* n = new UCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UCommands)
  deliveries_.Clear();
  pickups_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&simspeed_, 0, reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UGoDeliver deliveries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deliveries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .UGoPickup pickups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pickups()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 simspeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_simspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UCommands)
  return false;
#undef DO_
}

void UCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UCommands)
  // repeated .UGoDeliver deliveries = 1;
  for (unsigned int i = 0, n = this->deliveries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->deliveries(i), output);
  }

  // repeated .UGoPickup pickups = 2;
  for (unsigned int i = 0, n = this->pickups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pickups(i), output);
  }

  // optional uint32 simspeed = 3;
  if (has_simspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->simspeed(), output);
  }

  // optional bool disconnect = 4;
  if (has_disconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UCommands)
}

::google::protobuf::uint8* UCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UCommands)
  // repeated .UGoDeliver deliveries = 1;
  for (unsigned int i = 0, n = this->deliveries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->deliveries(i), false, target);
  }

  // repeated .UGoPickup pickups = 2;
  for (unsigned int i = 0, n = this->pickups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->pickups(i), false, target);
  }

  // optional uint32 simspeed = 3;
  if (has_simspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->simspeed(), target);
  }

  // optional bool disconnect = 4;
  if (has_disconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UCommands)
  return target;
}

size_t UCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .UGoDeliver deliveries = 1;
  {
    unsigned int count = this->deliveries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deliveries(i));
    }
  }

  // repeated .UGoPickup pickups = 2;
  {
    unsigned int count = this->pickups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pickups(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 simspeed = 3;
    if (has_simspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 4;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UCommands)
    MergeFrom(*source);
  }
}

void UCommands::MergeFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deliveries_.MergeFrom(from.deliveries_);
  pickups_.MergeFrom(from.pickups_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_simspeed()) {
      set_simspeed(from.simspeed());
    }
    if (from.has_disconnect()) {
      set_disconnect(from.disconnect());
    }
  }
}

void UCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UCommands::CopyFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->deliveries())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pickups())) return false;
  return true;
}

void UCommands::Swap(UCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UCommands::InternalSwap(UCommands* other) {
  deliveries_.UnsafeArenaSwap(&other->deliveries_);
  pickups_.UnsafeArenaSwap(&other->pickups_);
  std::swap(simspeed_, other->simspeed_);
  std::swap(disconnect_, other->disconnect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UCommands::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UCommands

// repeated .UGoDeliver deliveries = 1;
int UCommands::deliveries_size() const {
  return deliveries_.size();
}
void UCommands::clear_deliveries() {
  deliveries_.Clear();
}
const ::UGoDeliver& UCommands::deliveries(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.deliveries)
  return deliveries_.Get(index);
}
::UGoDeliver* UCommands::mutable_deliveries(int index) {
  // @@protoc_insertion_point(field_mutable:UCommands.deliveries)
  return deliveries_.Mutable(index);
}
::UGoDeliver* UCommands::add_deliveries() {
  // @@protoc_insertion_point(field_add:UCommands.deliveries)
  return deliveries_.Add();
}
::google::protobuf::RepeatedPtrField< ::UGoDeliver >*
UCommands::mutable_deliveries() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.deliveries)
  return &deliveries_;
}
const ::google::protobuf::RepeatedPtrField< ::UGoDeliver >&
UCommands::deliveries() const {
  // @@protoc_insertion_point(field_list:UCommands.deliveries)
  return deliveries_;
}

// repeated .UGoPickup pickups = 2;
int UCommands::pickups_size() const {
  return pickups_.size();
}
void UCommands::clear_pickups() {
  pickups_.Clear();
}
const ::UGoPickup& UCommands::pickups(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.pickups)
  return pickups_.Get(index);
}
::UGoPickup* UCommands::mutable_pickups(int index) {
  // @@protoc_insertion_point(field_mutable:UCommands.pickups)
  return pickups_.Mutable(index);
}
::UGoPickup* UCommands::add_pickups() {
  // @@protoc_insertion_point(field_add:UCommands.pickups)
  return pickups_.Add();
}
::google::protobuf::RepeatedPtrField< ::UGoPickup >*
UCommands::mutable_pickups() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.pickups)
  return &pickups_;
}
const ::google::protobuf::RepeatedPtrField< ::UGoPickup >&
UCommands::pickups() const {
  // @@protoc_insertion_point(field_list:UCommands.pickups)
  return pickups_;
}

// optional uint32 simspeed = 3;
bool UCommands::has_simspeed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UCommands::set_has_simspeed() {
  _has_bits_[0] |= 0x00000001u;
}
void UCommands::clear_has_simspeed() {
  _has_bits_[0] &= ~0x00000001u;
}
void UCommands::clear_simspeed() {
  simspeed_ = 0u;
  clear_has_simspeed();
}
::google::protobuf::uint32 UCommands::simspeed() const {
  // @@protoc_insertion_point(field_get:UCommands.simspeed)
  return simspeed_;
}
void UCommands::set_simspeed(::google::protobuf::uint32 value) {
  set_has_simspeed();
  simspeed_ = value;
  // @@protoc_insertion_point(field_set:UCommands.simspeed)
}

// optional bool disconnect = 4;
bool UCommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UCommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000002u;
}
void UCommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000002u;
}
void UCommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
bool UCommands::disconnect() const {
  // @@protoc_insertion_point(field_get:UCommands.disconnect)
  return disconnect_;
}
void UCommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:UCommands.disconnect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UResponses::kCompletionsFieldNumber;
const int UResponses::kDeliveredFieldNumber;
const int UResponses::kErrorFieldNumber;
const int UResponses::kFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UResponses::UResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UResponses)
}
UResponses::UResponses(const UResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      completions_(from.completions_),
      delivered_(from.delivered_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:UResponses)
}

void UResponses::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finished_ = false;
}

UResponses::~UResponses() {
  // @@protoc_insertion_point(destructor:UResponses)
  SharedDtor();
}

void UResponses::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UResponses::descriptor() {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[8].descriptor;
}

const UResponses& UResponses::default_instance() {
  protobuf_ups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UResponses* UResponses::New(::google::protobuf::Arena* arena) const {
  UResponses* n = new UResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:UResponses)
  completions_.Clear();
  delivered_.Clear();
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UFinished completions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_completions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .UDeliveryMade delivered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_delivered()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UResponses.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UResponses)
  return false;
#undef DO_
}

void UResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UResponses)
  // repeated .UFinished completions = 1;
  for (unsigned int i = 0, n = this->completions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->completions(i), output);
  }

  // repeated .UDeliveryMade delivered = 2;
  for (unsigned int i = 0, n = this->delivered_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->delivered(i), output);
  }

  // optional string error = 3;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UResponses.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // optional bool finished = 4;
  if (has_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->finished(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UResponses)
}

::google::protobuf::uint8* UResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UResponses)
  // repeated .UFinished completions = 1;
  for (unsigned int i = 0, n = this->completions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->completions(i), false, target);
  }

  // repeated .UDeliveryMade delivered = 2;
  for (unsigned int i = 0, n = this->delivered_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->delivered(i), false, target);
  }

  // optional string error = 3;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UResponses.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // optional bool finished = 4;
  if (has_finished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->finished(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UResponses)
  return target;
}

size_t UResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .UFinished completions = 1;
  {
    unsigned int count = this->completions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->completions(i));
    }
  }

  // repeated .UDeliveryMade delivered = 2;
  {
    unsigned int count = this->delivered_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delivered(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional bool finished = 4;
    if (has_finished()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const UResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UResponses)
    MergeFrom(*source);
  }
}

void UResponses::MergeFrom(const UResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  completions_.MergeFrom(from.completions_);
  delivered_.MergeFrom(from.delivered_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_error()) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (from.has_finished()) {
      set_finished(from.finished());
    }
  }
}

void UResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UResponses::CopyFrom(const UResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->completions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delivered())) return false;
  return true;
}

void UResponses::Swap(UResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UResponses::InternalSwap(UResponses* other) {
  completions_.UnsafeArenaSwap(&other->completions_);
  delivered_.UnsafeArenaSwap(&other->delivered_);
  error_.Swap(&other->error_);
  std::swap(finished_, other->finished_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UResponses::GetMetadata() const {
  protobuf_ups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ups_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UResponses

// repeated .UFinished completions = 1;
int UResponses::completions_size() const {
  return completions_.size();
}
void UResponses::clear_completions() {
  completions_.Clear();
}
const ::UFinished& UResponses::completions(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.completions)
  return completions_.Get(index);
}
::UFinished* UResponses::mutable_completions(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.completions)
  return completions_.Mutable(index);
}
::UFinished* UResponses::add_completions() {
  // @@protoc_insertion_point(field_add:UResponses.completions)
  return completions_.Add();
}
::google::protobuf::RepeatedPtrField< ::UFinished >*
UResponses::mutable_completions() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.completions)
  return &completions_;
}
const ::google::protobuf::RepeatedPtrField< ::UFinished >&
UResponses::completions() const {
  // @@protoc_insertion_point(field_list:UResponses.completions)
  return completions_;
}

// repeated .UDeliveryMade delivered = 2;
int UResponses::delivered_size() const {
  return delivered_.size();
}
void UResponses::clear_delivered() {
  delivered_.Clear();
}
const ::UDeliveryMade& UResponses::delivered(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.delivered)
  return delivered_.Get(index);
}
::UDeliveryMade* UResponses::mutable_delivered(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.delivered)
  return delivered_.Mutable(index);
}
::UDeliveryMade* UResponses::add_delivered() {
  // @@protoc_insertion_point(field_add:UResponses.delivered)
  return delivered_.Add();
}
::google::protobuf::RepeatedPtrField< ::UDeliveryMade >*
UResponses::mutable_delivered() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.delivered)
  return &delivered_;
}
const ::google::protobuf::RepeatedPtrField< ::UDeliveryMade >&
UResponses::delivered() const {
  // @@protoc_insertion_point(field_list:UResponses.delivered)
  return delivered_;
}

// optional string error = 3;
bool UResponses::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UResponses::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void UResponses::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void UResponses::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& UResponses::error() const {
  // @@protoc_insertion_point(field_get:UResponses.error)
  return error_.GetNoArena();
}
void UResponses::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UResponses.error)
}
#if LANG_CXX11
void UResponses::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UResponses.error)
}
#endif
void UResponses::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UResponses.error)
}
void UResponses::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UResponses.error)
}
::std::string* UResponses::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:UResponses.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UResponses::release_error() {
  // @@protoc_insertion_point(field_release:UResponses.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UResponses::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:UResponses.error)
}

// optional bool finished = 4;
bool UResponses::has_finished() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UResponses::set_has_finished() {
  _has_bits_[0] |= 0x00000002u;
}
void UResponses::clear_has_finished() {
  _has_bits_[0] &= ~0x00000002u;
}
void UResponses::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
bool UResponses::finished() const {
  // @@protoc_insertion_point(field_get:UResponses.finished)
  return finished_;
}
void UResponses::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:UResponses.finished)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
