// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "amazon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class AProductDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AProduct> {
} _AProduct_default_instance_;
class AInitWarehouseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AInitWarehouse> {
} _AInitWarehouse_default_instance_;
class AConnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AConnect> {
} _AConnect_default_instance_;
class AConnectedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AConnected> {
} _AConnected_default_instance_;
class APackDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APack> {
} _APack_default_instance_;
class APutOnTruckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APutOnTruck> {
} _APutOnTruck_default_instance_;
class APurchaseMoreDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APurchaseMore> {
} _APurchaseMore_default_instance_;
class ACommandsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ACommands> {
} _ACommands_default_instance_;
class AResponsesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AResponses> {
} _AResponses_default_instance_;
class UAProductDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UAProduct> {
} _UAProduct_default_instance_;
class UAPackDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UAPack> {
} _UAPack_default_instance_;
class UAShipRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UAShipRequest> {
} _UAShipRequest_default_instance_;
class UATruckArriveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UATruckArrive> {
} _UATruckArrive_default_instance_;
class AmazonCommandsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AmazonCommands> {
} _AmazonCommands_default_instance_;
class UPSResponsesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UPSResponses> {
} _UPSResponses_default_instance_;

namespace protobuf_amazon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, initwh_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, things_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, shipid_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, shipid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, things_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, topack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, simspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, disconnect_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, arrived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, loaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, finished_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAProduct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAProduct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAProduct, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAProduct, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAProduct, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPack, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPack, things_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPack, shipid_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAShipRequest, upsaccount_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrive, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrive, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrive, shipid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmazonCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmazonCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmazonCommands, req_ship_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmazonCommands, req_deliver_truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmazonCommands, disconnect_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UPSResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UPSResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UPSResponses, resp_truck_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(AProduct)},
  { 10, 16, sizeof(AInitWarehouse)},
  { 18, 24, sizeof(AConnect)},
  { 26, 31, sizeof(AConnected)},
  { 32, 39, sizeof(APack)},
  { 42, 49, sizeof(APutOnTruck)},
  { 52, 58, sizeof(APurchaseMore)},
  { 60, 69, sizeof(ACommands)},
  { 74, 83, sizeof(AResponses)},
  { 88, 95, sizeof(UAProduct)},
  { 98, 105, sizeof(UAPack)},
  { 108, 116, sizeof(UAShipRequest)},
  { 120, 127, sizeof(UATruckArrive)},
  { 130, 137, sizeof(AmazonCommands)},
  { 140, 145, sizeof(UPSResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AProduct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AInitWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APutOnTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APurchaseMore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ACommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AResponses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UAProduct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UAPack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UAShipRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UATruckArrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AmazonCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UPSResponses_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "amazon.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace

void TableStruct::Shutdown() {
  _AProduct_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AInitWarehouse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AConnect_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AConnected_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _APack_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _APutOnTruck_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _APurchaseMore_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ACommands_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _AResponses_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _UAProduct_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _UAPack_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _UAShipRequest_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _UATruckArrive_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _AmazonCommands_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _UPSResponses_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AProduct_default_instance_.DefaultConstruct();
  _AInitWarehouse_default_instance_.DefaultConstruct();
  _AConnect_default_instance_.DefaultConstruct();
  _AConnected_default_instance_.DefaultConstruct();
  _APack_default_instance_.DefaultConstruct();
  _APutOnTruck_default_instance_.DefaultConstruct();
  _APurchaseMore_default_instance_.DefaultConstruct();
  _ACommands_default_instance_.DefaultConstruct();
  _AResponses_default_instance_.DefaultConstruct();
  _UAProduct_default_instance_.DefaultConstruct();
  _UAPack_default_instance_.DefaultConstruct();
  _UAShipRequest_default_instance_.DefaultConstruct();
  _UATruckArrive_default_instance_.DefaultConstruct();
  _AmazonCommands_default_instance_.DefaultConstruct();
  _UPSResponses_default_instance_.DefaultConstruct();
  _UAShipRequest_default_instance_.get_mutable()->package_ = const_cast< ::UAPack*>(
      ::UAPack::internal_default_instance());
  _AmazonCommands_default_instance_.get_mutable()->req_ship_ = const_cast< ::UAShipRequest*>(
      ::UAShipRequest::internal_default_instance());
  _UPSResponses_default_instance_.get_mutable()->resp_truck_ = const_cast< ::UATruckArrive*>(
      ::UATruckArrive::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014amazon.proto\":\n\010AProduct\022\n\n\002id\030\001 \002(\003\022\023"
      "\n\013description\030\002 \002(\t\022\r\n\005count\030\003 \002(\005\"&\n\016AI"
      "nitWarehouse\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\"<\n\010AC"
      "onnect\022\017\n\007worldid\030\001 \002(\003\022\037\n\006initwh\030\002 \003(\0132"
      "\017.AInitWarehouse\"\033\n\nAConnected\022\r\n\005error\030"
      "\001 \001(\t\"A\n\005APack\022\r\n\005whnum\030\001 \002(\005\022\031\n\006things\030"
      "\002 \003(\0132\t.AProduct\022\016\n\006shipid\030\003 \002(\003\"=\n\013APut"
      "OnTruck\022\r\n\005whnum\030\001 \002(\005\022\017\n\007truckid\030\002 \002(\005\022"
      "\016\n\006shipid\030\003 \002(\003\"9\n\rAPurchaseMore\022\r\n\005whnu"
      "m\030\001 \002(\005\022\031\n\006things\030\002 \003(\0132\t.AProduct\"\202\001\n\tA"
      "Commands\022\033\n\003buy\030\001 \003(\0132\016.APurchaseMore\022\032\n"
      "\004load\030\002 \003(\0132\014.APutOnTruck\022\026\n\006topack\030\003 \003("
      "\0132\006.APack\022\020\n\010simspeed\030\004 \001(\r\022\022\n\ndisconnec"
      "t\030\005 \001(\010\"m\n\nAResponses\022\037\n\007arrived\030\001 \003(\0132\016"
      ".APurchaseMore\022\r\n\005ready\030\002 \003(\003\022\016\n\006loaded\030"
      "\003 \003(\003\022\r\n\005error\030\004 \001(\t\022\020\n\010finished\030\005 \001(\010\";"
      "\n\tUAProduct\022\n\n\002id\030\001 \002(\003\022\023\n\013description\030\002"
      " \002(\t\022\r\n\005count\030\003 \002(\005\"C\n\006UAPack\022\r\n\005whnum\030\001"
      " \002(\005\022\032\n\006things\030\002 \003(\0132\n.UAProduct\022\016\n\006ship"
      "id\030\003 \002(\003\"S\n\rUAShipRequest\022\030\n\007package\030\001 \002"
      "(\0132\007.UAPack\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\022\022\n\nups"
      "Account\030\004 \001(\t\"\?\n\rUATruckArrive\022\017\n\007trucki"
      "d\030\001 \002(\005\022\r\n\005whnum\030\002 \002(\005\022\016\n\006shipid\030\003 \002(\003\"c"
      "\n\016AmazonCommands\022 \n\010req_ship\030\001 \001(\0132\016.UAS"
      "hipRequest\022\033\n\023req_deliver_truckid\030\002 \001(\005\022"
      "\022\n\ndisconnect\030\003 \001(\010\"2\n\014UPSResponses\022\"\n\nr"
      "esp_truck\030\001 \001(\0132\016.UATruckArrive"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1071);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amazon.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_amazon_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AProduct::kIdFieldNumber;
const int AProduct::kDescriptionFieldNumber;
const int AProduct::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AProduct::AProduct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AProduct)
}
AProduct::AProduct(const AProduct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:AProduct)
}

void AProduct::SharedCtor() {
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
}

AProduct::~AProduct() {
  // @@protoc_insertion_point(destructor:AProduct)
  SharedDtor();
}

void AProduct::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AProduct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AProduct::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[0].descriptor;
}

const AProduct& AProduct::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AProduct* AProduct::New(::google::protobuf::Arena* arena) const {
  AProduct* n = new AProduct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:AProduct)
  if (has_description()) {
    GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AProduct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AProduct.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AProduct)
  return false;
#undef DO_
}

void AProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AProduct)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AProduct)
}

::google::protobuf::uint8* AProduct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AProduct)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AProduct)
  return target;
}

size_t AProduct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AProduct)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t AProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AProduct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  const AProduct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AProduct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AProduct)
    MergeFrom(*source);
  }
}

void AProduct::MergeFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
}

void AProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AProduct::CopyFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AProduct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AProduct::Swap(AProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AProduct::InternalSwap(AProduct* other) {
  description_.Swap(&other->description_);
  std::swap(id_, other->id_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AProduct::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AProduct

// required int64 id = 1;
bool AProduct::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AProduct::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AProduct::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AProduct::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
::google::protobuf::int64 AProduct::id() const {
  // @@protoc_insertion_point(field_get:AProduct.id)
  return id_;
}
void AProduct::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AProduct.id)
}

// required string description = 2;
bool AProduct::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AProduct::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
void AProduct::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void AProduct::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& AProduct::description() const {
  // @@protoc_insertion_point(field_get:AProduct.description)
  return description_.GetNoArena();
}
void AProduct::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AProduct.description)
}
#if LANG_CXX11
void AProduct::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AProduct.description)
}
#endif
void AProduct::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AProduct.description)
}
void AProduct::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AProduct.description)
}
::std::string* AProduct::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:AProduct.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AProduct::release_description() {
  // @@protoc_insertion_point(field_release:AProduct.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AProduct::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:AProduct.description)
}

// required int32 count = 3;
bool AProduct::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AProduct::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void AProduct::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void AProduct::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 AProduct::count() const {
  // @@protoc_insertion_point(field_get:AProduct.count)
  return count_;
}
void AProduct::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:AProduct.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AInitWarehouse::kXFieldNumber;
const int AInitWarehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AInitWarehouse::AInitWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AInitWarehouse)
}
AInitWarehouse::AInitWarehouse(const AInitWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AInitWarehouse)
}

void AInitWarehouse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

AInitWarehouse::~AInitWarehouse() {
  // @@protoc_insertion_point(destructor:AInitWarehouse)
  SharedDtor();
}

void AInitWarehouse::SharedDtor() {
}

void AInitWarehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AInitWarehouse::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[1].descriptor;
}

const AInitWarehouse& AInitWarehouse::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AInitWarehouse* AInitWarehouse::New(::google::protobuf::Arena* arena) const {
  AInitWarehouse* n = new AInitWarehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AInitWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AInitWarehouse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AInitWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AInitWarehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AInitWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AInitWarehouse)
  return false;
#undef DO_
}

void AInitWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AInitWarehouse)
  // required int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AInitWarehouse)
}

::google::protobuf::uint8* AInitWarehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AInitWarehouse)
  // required int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AInitWarehouse)
  return target;
}

size_t AInitWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AInitWarehouse)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t AInitWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AInitWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AInitWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const AInitWarehouse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AInitWarehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AInitWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AInitWarehouse)
    MergeFrom(*source);
  }
}

void AInitWarehouse::MergeFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void AInitWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AInitWarehouse::CopyFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AInitWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AInitWarehouse::Swap(AInitWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AInitWarehouse::InternalSwap(AInitWarehouse* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AInitWarehouse::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AInitWarehouse

// required int32 x = 1;
bool AInitWarehouse::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AInitWarehouse::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void AInitWarehouse::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void AInitWarehouse::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 AInitWarehouse::x() const {
  // @@protoc_insertion_point(field_get:AInitWarehouse.x)
  return x_;
}
void AInitWarehouse::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AInitWarehouse.x)
}

// required int32 y = 2;
bool AInitWarehouse::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AInitWarehouse::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void AInitWarehouse::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void AInitWarehouse::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 AInitWarehouse::y() const {
  // @@protoc_insertion_point(field_get:AInitWarehouse.y)
  return y_;
}
void AInitWarehouse::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AInitWarehouse.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnect::kWorldidFieldNumber;
const int AConnect::kInitwhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnect::AConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnect)
}
AConnect::AConnect(const AConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      initwh_(from.initwh_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:AConnect)
}

void AConnect::SharedCtor() {
  _cached_size_ = 0;
  worldid_ = GOOGLE_LONGLONG(0);
}

AConnect::~AConnect() {
  // @@protoc_insertion_point(destructor:AConnect)
  SharedDtor();
}

void AConnect::SharedDtor() {
}

void AConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnect::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[2].descriptor;
}

const AConnect& AConnect::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AConnect* AConnect::New(::google::protobuf::Arena* arena) const {
  AConnect* n = new AConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnect)
  initwh_.Clear();
  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AInitWarehouse initwh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_initwh()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnect)
  return false;
#undef DO_
}

void AConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnect)
  // required int64 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0, n = this->initwh_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->initwh(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnect)
}

::google::protobuf::uint8* AConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AConnect)
  // required int64 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0, n = this->initwh_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->initwh(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnect)
  return target;
}

size_t AConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  // repeated .AInitWarehouse initwh = 2;
  {
    unsigned int count = this->initwh_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initwh(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnect)
    MergeFrom(*source);
  }
}

void AConnect::MergeFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initwh_.MergeFrom(from.initwh_);
  if (from.has_worldid()) {
    set_worldid(from.worldid());
  }
}

void AConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnect::CopyFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->initwh())) return false;
  return true;
}

void AConnect::Swap(AConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnect::InternalSwap(AConnect* other) {
  initwh_.UnsafeArenaSwap(&other->initwh_);
  std::swap(worldid_, other->worldid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnect::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AConnect

// required int64 worldid = 1;
bool AConnect::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AConnect::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
void AConnect::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AConnect::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
::google::protobuf::int64 AConnect::worldid() const {
  // @@protoc_insertion_point(field_get:AConnect.worldid)
  return worldid_;
}
void AConnect::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:AConnect.worldid)
}

// repeated .AInitWarehouse initwh = 2;
int AConnect::initwh_size() const {
  return initwh_.size();
}
void AConnect::clear_initwh() {
  initwh_.Clear();
}
const ::AInitWarehouse& AConnect::initwh(int index) const {
  // @@protoc_insertion_point(field_get:AConnect.initwh)
  return initwh_.Get(index);
}
::AInitWarehouse* AConnect::mutable_initwh(int index) {
  // @@protoc_insertion_point(field_mutable:AConnect.initwh)
  return initwh_.Mutable(index);
}
::AInitWarehouse* AConnect::add_initwh() {
  // @@protoc_insertion_point(field_add:AConnect.initwh)
  return initwh_.Add();
}
::google::protobuf::RepeatedPtrField< ::AInitWarehouse >*
AConnect::mutable_initwh() {
  // @@protoc_insertion_point(field_mutable_list:AConnect.initwh)
  return &initwh_;
}
const ::google::protobuf::RepeatedPtrField< ::AInitWarehouse >&
AConnect::initwh() const {
  // @@protoc_insertion_point(field_list:AConnect.initwh)
  return initwh_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnected::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnected::AConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnected)
}
AConnected::AConnected(const AConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:AConnected)
}

void AConnected::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AConnected::~AConnected() {
  // @@protoc_insertion_point(destructor:AConnected)
  SharedDtor();
}

void AConnected::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnected::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[3].descriptor;
}

const AConnected& AConnected::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AConnected* AConnected::New(::google::protobuf::Arena* arena) const {
  AConnected* n = new AConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnected)
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AConnected.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnected)
  return false;
#undef DO_
}

void AConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnected)
  // optional string error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnected)
}

::google::protobuf::uint8* AConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AConnected)
  // optional string error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnected)
  return target;
}

size_t AConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnected)
    MergeFrom(*source);
  }
}

void AConnected::MergeFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void AConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnected::CopyFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnected::IsInitialized() const {
  return true;
}

void AConnected::Swap(AConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnected::InternalSwap(AConnected* other) {
  error_.Swap(&other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnected::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AConnected

// optional string error = 1;
bool AConnected::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AConnected::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void AConnected::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void AConnected::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& AConnected::error() const {
  // @@protoc_insertion_point(field_get:AConnected.error)
  return error_.GetNoArena();
}
void AConnected::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AConnected.error)
}
#if LANG_CXX11
void AConnected::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AConnected.error)
}
#endif
void AConnected::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AConnected.error)
}
void AConnected::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AConnected.error)
}
::std::string* AConnected::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:AConnected.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AConnected::release_error() {
  // @@protoc_insertion_point(field_release:AConnected.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AConnected::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:AConnected.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APack::kWhnumFieldNumber;
const int APack::kThingsFieldNumber;
const int APack::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APack::APack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APack)
}
APack::APack(const APack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
  // @@protoc_insertion_point(copy_constructor:APack)
}

void APack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&shipid_, 0, reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
}

APack::~APack() {
  // @@protoc_insertion_point(destructor:APack)
  SharedDtor();
}

void APack::SharedDtor() {
}

void APack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APack::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[4].descriptor;
}

const APack& APack::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

APack* APack::New(::google::protobuf::Arena* arena) const {
  APack* n = new APack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APack::Clear() {
// @@protoc_insertion_point(message_clear_start:APack)
  things_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&shipid_, 0, reinterpret_cast<char*>(&whnum_) -
      reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APack)
  return false;
#undef DO_
}

void APack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(i), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APack)
}

::google::protobuf::uint8* APack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->things(i), false, target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APack)
  return target;
}

size_t APack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APack)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  return total_size;
}
size_t APack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AProduct things = 2;
  {
    unsigned int count = this->things_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->things(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  const APack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APack)
    MergeFrom(*source);
  }
}

void APack::MergeFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  things_.MergeFrom(from.things_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
  }
}

void APack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APack::CopyFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APack::Swap(APack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APack::InternalSwap(APack* other) {
  things_.UnsafeArenaSwap(&other->things_);
  std::swap(shipid_, other->shipid_);
  std::swap(whnum_, other->whnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APack::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APack

// required int32 whnum = 1;
bool APack::has_whnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APack::set_has_whnum() {
  _has_bits_[0] |= 0x00000002u;
}
void APack::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void APack::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 APack::whnum() const {
  // @@protoc_insertion_point(field_get:APack.whnum)
  return whnum_;
}
void APack::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APack.whnum)
}

// repeated .AProduct things = 2;
int APack::things_size() const {
  return things_.size();
}
void APack::clear_things() {
  things_.Clear();
}
const ::AProduct& APack::things(int index) const {
  // @@protoc_insertion_point(field_get:APack.things)
  return things_.Get(index);
}
::AProduct* APack::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:APack.things)
  return things_.Mutable(index);
}
::AProduct* APack::add_things() {
  // @@protoc_insertion_point(field_add:APack.things)
  return things_.Add();
}
::google::protobuf::RepeatedPtrField< ::AProduct >*
APack::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:APack.things)
  return &things_;
}
const ::google::protobuf::RepeatedPtrField< ::AProduct >&
APack::things() const {
  // @@protoc_insertion_point(field_list:APack.things)
  return things_;
}

// required int64 shipid = 3;
bool APack::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APack::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void APack::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void APack::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
::google::protobuf::int64 APack::shipid() const {
  // @@protoc_insertion_point(field_get:APack.shipid)
  return shipid_;
}
void APack::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:APack.shipid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APutOnTruck::kWhnumFieldNumber;
const int APutOnTruck::kTruckidFieldNumber;
const int APutOnTruck::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APutOnTruck::APutOnTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APutOnTruck)
}
APutOnTruck::APutOnTruck(const APutOnTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whnum_, &from.whnum_,
    reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&whnum_) + sizeof(shipid_));
  // @@protoc_insertion_point(copy_constructor:APutOnTruck)
}

void APutOnTruck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whnum_, 0, reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&whnum_) + sizeof(shipid_));
}

APutOnTruck::~APutOnTruck() {
  // @@protoc_insertion_point(destructor:APutOnTruck)
  SharedDtor();
}

void APutOnTruck::SharedDtor() {
}

void APutOnTruck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APutOnTruck::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[5].descriptor;
}

const APutOnTruck& APutOnTruck::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

APutOnTruck* APutOnTruck::New(::google::protobuf::Arena* arena) const {
  APutOnTruck* n = new APutOnTruck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APutOnTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:APutOnTruck)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&whnum_, 0, reinterpret_cast<char*>(&shipid_) -
      reinterpret_cast<char*>(&whnum_) + sizeof(shipid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APutOnTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APutOnTruck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APutOnTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APutOnTruck)
  return false;
#undef DO_
}

void APutOnTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APutOnTruck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APutOnTruck)
}

::google::protobuf::uint8* APutOnTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APutOnTruck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APutOnTruck)
  return target;
}

size_t APutOnTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APutOnTruck)
  size_t total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  return total_size;
}
size_t APutOnTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APutOnTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APutOnTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const APutOnTruck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APutOnTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APutOnTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APutOnTruck)
    MergeFrom(*source);
  }
}

void APutOnTruck::MergeFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
  }
}

void APutOnTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APutOnTruck::CopyFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APutOnTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void APutOnTruck::Swap(APutOnTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APutOnTruck::InternalSwap(APutOnTruck* other) {
  std::swap(whnum_, other->whnum_);
  std::swap(truckid_, other->truckid_);
  std::swap(shipid_, other->shipid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APutOnTruck::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APutOnTruck

// required int32 whnum = 1;
bool APutOnTruck::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APutOnTruck::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void APutOnTruck::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void APutOnTruck::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 APutOnTruck::whnum() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.whnum)
  return whnum_;
}
void APutOnTruck::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.whnum)
}

// required int32 truckid = 2;
bool APutOnTruck::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APutOnTruck::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
void APutOnTruck::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
void APutOnTruck::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 APutOnTruck::truckid() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.truckid)
  return truckid_;
}
void APutOnTruck::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.truckid)
}

// required int64 shipid = 3;
bool APutOnTruck::has_shipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APutOnTruck::set_has_shipid() {
  _has_bits_[0] |= 0x00000004u;
}
void APutOnTruck::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000004u;
}
void APutOnTruck::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
::google::protobuf::int64 APutOnTruck::shipid() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.shipid)
  return shipid_;
}
void APutOnTruck::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.shipid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APurchaseMore::kWhnumFieldNumber;
const int APurchaseMore::kThingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APurchaseMore::APurchaseMore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APurchaseMore)
}
APurchaseMore::APurchaseMore(const APurchaseMore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  whnum_ = from.whnum_;
  // @@protoc_insertion_point(copy_constructor:APurchaseMore)
}

void APurchaseMore::SharedCtor() {
  _cached_size_ = 0;
  whnum_ = 0;
}

APurchaseMore::~APurchaseMore() {
  // @@protoc_insertion_point(destructor:APurchaseMore)
  SharedDtor();
}

void APurchaseMore::SharedDtor() {
}

void APurchaseMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APurchaseMore::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[6].descriptor;
}

const APurchaseMore& APurchaseMore::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

APurchaseMore* APurchaseMore::New(::google::protobuf::Arena* arena) const {
  APurchaseMore* n = new APurchaseMore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APurchaseMore::Clear() {
// @@protoc_insertion_point(message_clear_start:APurchaseMore)
  things_.Clear();
  whnum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APurchaseMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APurchaseMore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APurchaseMore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APurchaseMore)
  return false;
#undef DO_
}

void APurchaseMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APurchaseMore)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APurchaseMore)
}

::google::protobuf::uint8* APurchaseMore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APurchaseMore)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->things(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APurchaseMore)
  return target;
}

size_t APurchaseMore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APurchaseMore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 whnum = 1;
  if (has_whnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }
  // repeated .AProduct things = 2;
  {
    unsigned int count = this->things_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->things(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APurchaseMore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  const APurchaseMore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APurchaseMore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APurchaseMore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APurchaseMore)
    MergeFrom(*source);
  }
}

void APurchaseMore::MergeFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  things_.MergeFrom(from.things_);
  if (from.has_whnum()) {
    set_whnum(from.whnum());
  }
}

void APurchaseMore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APurchaseMore::CopyFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APurchaseMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APurchaseMore::Swap(APurchaseMore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APurchaseMore::InternalSwap(APurchaseMore* other) {
  things_.UnsafeArenaSwap(&other->things_);
  std::swap(whnum_, other->whnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APurchaseMore::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APurchaseMore

// required int32 whnum = 1;
bool APurchaseMore::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APurchaseMore::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void APurchaseMore::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void APurchaseMore::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 APurchaseMore::whnum() const {
  // @@protoc_insertion_point(field_get:APurchaseMore.whnum)
  return whnum_;
}
void APurchaseMore::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APurchaseMore.whnum)
}

// repeated .AProduct things = 2;
int APurchaseMore::things_size() const {
  return things_.size();
}
void APurchaseMore::clear_things() {
  things_.Clear();
}
const ::AProduct& APurchaseMore::things(int index) const {
  // @@protoc_insertion_point(field_get:APurchaseMore.things)
  return things_.Get(index);
}
::AProduct* APurchaseMore::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:APurchaseMore.things)
  return things_.Mutable(index);
}
::AProduct* APurchaseMore::add_things() {
  // @@protoc_insertion_point(field_add:APurchaseMore.things)
  return things_.Add();
}
::google::protobuf::RepeatedPtrField< ::AProduct >*
APurchaseMore::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:APurchaseMore.things)
  return &things_;
}
const ::google::protobuf::RepeatedPtrField< ::AProduct >&
APurchaseMore::things() const {
  // @@protoc_insertion_point(field_list:APurchaseMore.things)
  return things_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACommands::kBuyFieldNumber;
const int ACommands::kLoadFieldNumber;
const int ACommands::kTopackFieldNumber;
const int ACommands::kSimspeedFieldNumber;
const int ACommands::kDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACommands::ACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ACommands)
}
ACommands::ACommands(const ACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      buy_(from.buy_),
      load_(from.load_),
      topack_(from.topack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simspeed_, &from.simspeed_,
    reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:ACommands)
}

void ACommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&simspeed_, 0, reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
}

ACommands::~ACommands() {
  // @@protoc_insertion_point(destructor:ACommands)
  SharedDtor();
}

void ACommands::SharedDtor() {
}

void ACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ACommands::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[7].descriptor;
}

const ACommands& ACommands::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ACommands* ACommands::New(::google::protobuf::Arena* arena) const {
  ACommands* n = new ACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:ACommands)
  buy_.Clear();
  load_.Clear();
  topack_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&simspeed_, 0, reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&simspeed_) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore buy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buy()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .APutOnTruck load = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_load()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .APack topack = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_topack()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 simspeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_simspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ACommands)
  return false;
#undef DO_
}

void ACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ACommands)
  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buy(i), output);
  }

  // repeated .APutOnTruck load = 2;
  for (unsigned int i = 0, n = this->load_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->load(i), output);
  }

  // repeated .APack topack = 3;
  for (unsigned int i = 0, n = this->topack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->topack(i), output);
  }

  // optional uint32 simspeed = 4;
  if (has_simspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->simspeed(), output);
  }

  // optional bool disconnect = 5;
  if (has_disconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->disconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ACommands)
}

::google::protobuf::uint8* ACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ACommands)
  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->buy(i), false, target);
  }

  // repeated .APutOnTruck load = 2;
  for (unsigned int i = 0, n = this->load_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->load(i), false, target);
  }

  // repeated .APack topack = 3;
  for (unsigned int i = 0, n = this->topack_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->topack(i), false, target);
  }

  // optional uint32 simspeed = 4;
  if (has_simspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->simspeed(), target);
  }

  // optional bool disconnect = 5;
  if (has_disconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->disconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ACommands)
  return target;
}

size_t ACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .APurchaseMore buy = 1;
  {
    unsigned int count = this->buy_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buy(i));
    }
  }

  // repeated .APutOnTruck load = 2;
  {
    unsigned int count = this->load_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->load(i));
    }
  }

  // repeated .APack topack = 3;
  {
    unsigned int count = this->topack_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->topack(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 simspeed = 4;
    if (has_simspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 5;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const ACommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ACommands)
    MergeFrom(*source);
  }
}

void ACommands::MergeFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buy_.MergeFrom(from.buy_);
  load_.MergeFrom(from.load_);
  topack_.MergeFrom(from.topack_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_simspeed()) {
      set_simspeed(from.simspeed());
    }
    if (from.has_disconnect()) {
      set_disconnect(from.disconnect());
    }
  }
}

void ACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACommands::CopyFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->buy())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->load())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->topack())) return false;
  return true;
}

void ACommands::Swap(ACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACommands::InternalSwap(ACommands* other) {
  buy_.UnsafeArenaSwap(&other->buy_);
  load_.UnsafeArenaSwap(&other->load_);
  topack_.UnsafeArenaSwap(&other->topack_);
  std::swap(simspeed_, other->simspeed_);
  std::swap(disconnect_, other->disconnect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ACommands::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ACommands

// repeated .APurchaseMore buy = 1;
int ACommands::buy_size() const {
  return buy_.size();
}
void ACommands::clear_buy() {
  buy_.Clear();
}
const ::APurchaseMore& ACommands::buy(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.buy)
  return buy_.Get(index);
}
::APurchaseMore* ACommands::mutable_buy(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.buy)
  return buy_.Mutable(index);
}
::APurchaseMore* ACommands::add_buy() {
  // @@protoc_insertion_point(field_add:ACommands.buy)
  return buy_.Add();
}
::google::protobuf::RepeatedPtrField< ::APurchaseMore >*
ACommands::mutable_buy() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.buy)
  return &buy_;
}
const ::google::protobuf::RepeatedPtrField< ::APurchaseMore >&
ACommands::buy() const {
  // @@protoc_insertion_point(field_list:ACommands.buy)
  return buy_;
}

// repeated .APutOnTruck load = 2;
int ACommands::load_size() const {
  return load_.size();
}
void ACommands::clear_load() {
  load_.Clear();
}
const ::APutOnTruck& ACommands::load(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.load)
  return load_.Get(index);
}
::APutOnTruck* ACommands::mutable_load(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.load)
  return load_.Mutable(index);
}
::APutOnTruck* ACommands::add_load() {
  // @@protoc_insertion_point(field_add:ACommands.load)
  return load_.Add();
}
::google::protobuf::RepeatedPtrField< ::APutOnTruck >*
ACommands::mutable_load() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.load)
  return &load_;
}
const ::google::protobuf::RepeatedPtrField< ::APutOnTruck >&
ACommands::load() const {
  // @@protoc_insertion_point(field_list:ACommands.load)
  return load_;
}

// repeated .APack topack = 3;
int ACommands::topack_size() const {
  return topack_.size();
}
void ACommands::clear_topack() {
  topack_.Clear();
}
const ::APack& ACommands::topack(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.topack)
  return topack_.Get(index);
}
::APack* ACommands::mutable_topack(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.topack)
  return topack_.Mutable(index);
}
::APack* ACommands::add_topack() {
  // @@protoc_insertion_point(field_add:ACommands.topack)
  return topack_.Add();
}
::google::protobuf::RepeatedPtrField< ::APack >*
ACommands::mutable_topack() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.topack)
  return &topack_;
}
const ::google::protobuf::RepeatedPtrField< ::APack >&
ACommands::topack() const {
  // @@protoc_insertion_point(field_list:ACommands.topack)
  return topack_;
}

// optional uint32 simspeed = 4;
bool ACommands::has_simspeed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ACommands::set_has_simspeed() {
  _has_bits_[0] |= 0x00000001u;
}
void ACommands::clear_has_simspeed() {
  _has_bits_[0] &= ~0x00000001u;
}
void ACommands::clear_simspeed() {
  simspeed_ = 0u;
  clear_has_simspeed();
}
::google::protobuf::uint32 ACommands::simspeed() const {
  // @@protoc_insertion_point(field_get:ACommands.simspeed)
  return simspeed_;
}
void ACommands::set_simspeed(::google::protobuf::uint32 value) {
  set_has_simspeed();
  simspeed_ = value;
  // @@protoc_insertion_point(field_set:ACommands.simspeed)
}

// optional bool disconnect = 5;
bool ACommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ACommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000002u;
}
void ACommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000002u;
}
void ACommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
bool ACommands::disconnect() const {
  // @@protoc_insertion_point(field_get:ACommands.disconnect)
  return disconnect_;
}
void ACommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:ACommands.disconnect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AResponses::kArrivedFieldNumber;
const int AResponses::kReadyFieldNumber;
const int AResponses::kLoadedFieldNumber;
const int AResponses::kErrorFieldNumber;
const int AResponses::kFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AResponses::AResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AResponses)
}
AResponses::AResponses(const AResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      arrived_(from.arrived_),
      ready_(from.ready_),
      loaded_(from.loaded_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:AResponses)
}

void AResponses::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finished_ = false;
}

AResponses::~AResponses() {
  // @@protoc_insertion_point(destructor:AResponses)
  SharedDtor();
}

void AResponses::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AResponses::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[8].descriptor;
}

const AResponses& AResponses::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AResponses* AResponses::New(::google::protobuf::Arena* arena) const {
  AResponses* n = new AResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:AResponses)
  arrived_.Clear();
  ready_.Clear();
  loaded_.Clear();
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore arrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated int64 ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_ready())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ready())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 loaded = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_loaded())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_loaded())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AResponses.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AResponses)
  return false;
#undef DO_
}

void AResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AResponses)
  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrived(i), output);
  }

  // repeated int64 ready = 2;
  for (int i = 0, n = this->ready_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->ready(i), output);
  }

  // repeated int64 loaded = 3;
  for (int i = 0, n = this->loaded_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->loaded(i), output);
  }

  // optional string error = 4;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AResponses.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error(), output);
  }

  // optional bool finished = 5;
  if (has_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->finished(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AResponses)
}

::google::protobuf::uint8* AResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AResponses)
  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->arrived(i), false, target);
  }

  // repeated int64 ready = 2;
  for (int i = 0, n = this->ready_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->ready(i), target);
  }

  // repeated int64 loaded = 3;
  for (int i = 0, n = this->loaded_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->loaded(i), target);
  }

  // optional string error = 4;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AResponses.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error(), target);
  }

  // optional bool finished = 5;
  if (has_finished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->finished(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AResponses)
  return target;
}

size_t AResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .APurchaseMore arrived = 1;
  {
    unsigned int count = this->arrived_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arrived(i));
    }
  }

  // repeated int64 ready = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ready_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ready_size());
    total_size += data_size;
  }

  // repeated int64 loaded = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->loaded_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->loaded_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string error = 4;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional bool finished = 5;
    if (has_finished()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const AResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AResponses)
    MergeFrom(*source);
  }
}

void AResponses::MergeFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arrived_.MergeFrom(from.arrived_);
  ready_.MergeFrom(from.ready_);
  loaded_.MergeFrom(from.loaded_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_error()) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (from.has_finished()) {
      set_finished(from.finished());
    }
  }
}

void AResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AResponses::CopyFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  return true;
}

void AResponses::Swap(AResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AResponses::InternalSwap(AResponses* other) {
  arrived_.UnsafeArenaSwap(&other->arrived_);
  ready_.UnsafeArenaSwap(&other->ready_);
  loaded_.UnsafeArenaSwap(&other->loaded_);
  error_.Swap(&other->error_);
  std::swap(finished_, other->finished_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AResponses::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AResponses

// repeated .APurchaseMore arrived = 1;
int AResponses::arrived_size() const {
  return arrived_.size();
}
void AResponses::clear_arrived() {
  arrived_.Clear();
}
const ::APurchaseMore& AResponses::arrived(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.arrived)
  return arrived_.Get(index);
}
::APurchaseMore* AResponses::mutable_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.arrived)
  return arrived_.Mutable(index);
}
::APurchaseMore* AResponses::add_arrived() {
  // @@protoc_insertion_point(field_add:AResponses.arrived)
  return arrived_.Add();
}
::google::protobuf::RepeatedPtrField< ::APurchaseMore >*
AResponses::mutable_arrived() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.arrived)
  return &arrived_;
}
const ::google::protobuf::RepeatedPtrField< ::APurchaseMore >&
AResponses::arrived() const {
  // @@protoc_insertion_point(field_list:AResponses.arrived)
  return arrived_;
}

// repeated int64 ready = 2;
int AResponses::ready_size() const {
  return ready_.size();
}
void AResponses::clear_ready() {
  ready_.Clear();
}
::google::protobuf::int64 AResponses::ready(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.ready)
  return ready_.Get(index);
}
void AResponses::set_ready(int index, ::google::protobuf::int64 value) {
  ready_.Set(index, value);
  // @@protoc_insertion_point(field_set:AResponses.ready)
}
void AResponses::add_ready(::google::protobuf::int64 value) {
  ready_.Add(value);
  // @@protoc_insertion_point(field_add:AResponses.ready)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AResponses::ready() const {
  // @@protoc_insertion_point(field_list:AResponses.ready)
  return ready_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AResponses::mutable_ready() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.ready)
  return &ready_;
}

// repeated int64 loaded = 3;
int AResponses::loaded_size() const {
  return loaded_.size();
}
void AResponses::clear_loaded() {
  loaded_.Clear();
}
::google::protobuf::int64 AResponses::loaded(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.loaded)
  return loaded_.Get(index);
}
void AResponses::set_loaded(int index, ::google::protobuf::int64 value) {
  loaded_.Set(index, value);
  // @@protoc_insertion_point(field_set:AResponses.loaded)
}
void AResponses::add_loaded(::google::protobuf::int64 value) {
  loaded_.Add(value);
  // @@protoc_insertion_point(field_add:AResponses.loaded)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AResponses::loaded() const {
  // @@protoc_insertion_point(field_list:AResponses.loaded)
  return loaded_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AResponses::mutable_loaded() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.loaded)
  return &loaded_;
}

// optional string error = 4;
bool AResponses::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AResponses::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void AResponses::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void AResponses::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& AResponses::error() const {
  // @@protoc_insertion_point(field_get:AResponses.error)
  return error_.GetNoArena();
}
void AResponses::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AResponses.error)
}
#if LANG_CXX11
void AResponses::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AResponses.error)
}
#endif
void AResponses::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AResponses.error)
}
void AResponses::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AResponses.error)
}
::std::string* AResponses::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:AResponses.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AResponses::release_error() {
  // @@protoc_insertion_point(field_release:AResponses.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AResponses::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:AResponses.error)
}

// optional bool finished = 5;
bool AResponses::has_finished() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AResponses::set_has_finished() {
  _has_bits_[0] |= 0x00000002u;
}
void AResponses::clear_has_finished() {
  _has_bits_[0] &= ~0x00000002u;
}
void AResponses::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
bool AResponses::finished() const {
  // @@protoc_insertion_point(field_get:AResponses.finished)
  return finished_;
}
void AResponses::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:AResponses.finished)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAProduct::kIdFieldNumber;
const int UAProduct::kDescriptionFieldNumber;
const int UAProduct::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAProduct::UAProduct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAProduct)
}
UAProduct::UAProduct(const UAProduct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:UAProduct)
}

void UAProduct::SharedCtor() {
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_) + sizeof(count_));
}

UAProduct::~UAProduct() {
  // @@protoc_insertion_point(destructor:UAProduct)
  SharedDtor();
}

void UAProduct::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UAProduct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAProduct::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[9].descriptor;
}

const UAProduct& UAProduct::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UAProduct* UAProduct::New(::google::protobuf::Arena* arena) const {
  UAProduct* n = new UAProduct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:UAProduct)
  if (has_description()) {
    GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UAProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAProduct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UAProduct.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAProduct)
  return false;
#undef DO_
}

void UAProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAProduct)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAProduct.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAProduct)
}

::google::protobuf::uint8* UAProduct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UAProduct)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAProduct.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAProduct)
  return target;
}

size_t UAProduct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAProduct)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t UAProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UAProduct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAProduct)
  GOOGLE_DCHECK_NE(&from, this);
  const UAProduct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UAProduct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAProduct)
    MergeFrom(*source);
  }
}

void UAProduct::MergeFrom(const UAProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAProduct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
}

void UAProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAProduct::CopyFrom(const UAProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAProduct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UAProduct::Swap(UAProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAProduct::InternalSwap(UAProduct* other) {
  description_.Swap(&other->description_);
  std::swap(id_, other->id_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAProduct::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAProduct

// required int64 id = 1;
bool UAProduct::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAProduct::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void UAProduct::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAProduct::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
::google::protobuf::int64 UAProduct::id() const {
  // @@protoc_insertion_point(field_get:UAProduct.id)
  return id_;
}
void UAProduct::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:UAProduct.id)
}

// required string description = 2;
bool UAProduct::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAProduct::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
void UAProduct::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAProduct::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& UAProduct::description() const {
  // @@protoc_insertion_point(field_get:UAProduct.description)
  return description_.GetNoArena();
}
void UAProduct::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UAProduct.description)
}
#if LANG_CXX11
void UAProduct::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UAProduct.description)
}
#endif
void UAProduct::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UAProduct.description)
}
void UAProduct::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UAProduct.description)
}
::std::string* UAProduct::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:UAProduct.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UAProduct::release_description() {
  // @@protoc_insertion_point(field_release:UAProduct.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UAProduct::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:UAProduct.description)
}

// required int32 count = 3;
bool UAProduct::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UAProduct::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void UAProduct::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void UAProduct::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 UAProduct::count() const {
  // @@protoc_insertion_point(field_get:UAProduct.count)
  return count_;
}
void UAProduct::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:UAProduct.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAPack::kWhnumFieldNumber;
const int UAPack::kThingsFieldNumber;
const int UAPack::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAPack::UAPack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAPack)
}
UAPack::UAPack(const UAPack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
  // @@protoc_insertion_point(copy_constructor:UAPack)
}

void UAPack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&shipid_, 0, reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
}

UAPack::~UAPack() {
  // @@protoc_insertion_point(destructor:UAPack)
  SharedDtor();
}

void UAPack::SharedDtor() {
}

void UAPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAPack::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[10].descriptor;
}

const UAPack& UAPack::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UAPack* UAPack::New(::google::protobuf::Arena* arena) const {
  UAPack* n = new UAPack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAPack::Clear() {
// @@protoc_insertion_point(message_clear_start:UAPack)
  things_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&shipid_, 0, reinterpret_cast<char*>(&whnum_) -
      reinterpret_cast<char*>(&shipid_) + sizeof(whnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UAPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UAProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAPack)
  return false;
#undef DO_
}

void UAPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAPack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .UAProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(i), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAPack)
}

::google::protobuf::uint8* UAPack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UAPack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .UAProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->things(i), false, target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAPack)
  return target;
}

size_t UAPack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAPack)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  return total_size;
}
size_t UAPack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UAPack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .UAProduct things = 2;
  {
    unsigned int count = this->things_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->things(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAPack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAPack)
  GOOGLE_DCHECK_NE(&from, this);
  const UAPack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UAPack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAPack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAPack)
    MergeFrom(*source);
  }
}

void UAPack::MergeFrom(const UAPack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAPack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  things_.MergeFrom(from.things_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
  }
}

void UAPack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAPack::CopyFrom(const UAPack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAPack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void UAPack::Swap(UAPack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAPack::InternalSwap(UAPack* other) {
  things_.UnsafeArenaSwap(&other->things_);
  std::swap(shipid_, other->shipid_);
  std::swap(whnum_, other->whnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAPack::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAPack

// required int32 whnum = 1;
bool UAPack::has_whnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAPack::set_has_whnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UAPack::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAPack::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 UAPack::whnum() const {
  // @@protoc_insertion_point(field_get:UAPack.whnum)
  return whnum_;
}
void UAPack::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:UAPack.whnum)
}

// repeated .UAProduct things = 2;
int UAPack::things_size() const {
  return things_.size();
}
void UAPack::clear_things() {
  things_.Clear();
}
const ::UAProduct& UAPack::things(int index) const {
  // @@protoc_insertion_point(field_get:UAPack.things)
  return things_.Get(index);
}
::UAProduct* UAPack::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:UAPack.things)
  return things_.Mutable(index);
}
::UAProduct* UAPack::add_things() {
  // @@protoc_insertion_point(field_add:UAPack.things)
  return things_.Add();
}
::google::protobuf::RepeatedPtrField< ::UAProduct >*
UAPack::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:UAPack.things)
  return &things_;
}
const ::google::protobuf::RepeatedPtrField< ::UAProduct >&
UAPack::things() const {
  // @@protoc_insertion_point(field_list:UAPack.things)
  return things_;
}

// required int64 shipid = 3;
bool UAPack::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAPack::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void UAPack::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAPack::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
::google::protobuf::int64 UAPack::shipid() const {
  // @@protoc_insertion_point(field_get:UAPack.shipid)
  return shipid_;
}
void UAPack::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UAPack.shipid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAShipRequest::kPackageFieldNumber;
const int UAShipRequest::kXFieldNumber;
const int UAShipRequest::kYFieldNumber;
const int UAShipRequest::kUpsAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAShipRequest::UAShipRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAShipRequest)
}
UAShipRequest::UAShipRequest(const UAShipRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upsaccount()) {
    upsaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsaccount_);
  }
  if (from.has_package()) {
    package_ = new ::UAPack(*from.package_);
  } else {
    package_ = NULL;
  }
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UAShipRequest)
}

void UAShipRequest::SharedCtor() {
  _cached_size_ = 0;
  upsaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&package_) + sizeof(y_));
}

UAShipRequest::~UAShipRequest() {
  // @@protoc_insertion_point(destructor:UAShipRequest)
  SharedDtor();
}

void UAShipRequest::SharedDtor() {
  upsaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete package_;
  }
}

void UAShipRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAShipRequest::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[11].descriptor;
}

const UAShipRequest& UAShipRequest::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UAShipRequest* UAShipRequest::New(::google::protobuf::Arena* arena) const {
  UAShipRequest* n = new UAShipRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAShipRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UAShipRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_upsaccount()) {
      GOOGLE_DCHECK(!upsaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*upsaccount_.UnsafeRawStringPointer())->clear();
    }
    if (has_package()) {
      GOOGLE_DCHECK(package_ != NULL);
      package_->::UAPack::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UAShipRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAShipRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UAPack package = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string upsAccount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upsaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upsaccount().data(), this->upsaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UAShipRequest.upsAccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAShipRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAShipRequest)
  return false;
#undef DO_
}

void UAShipRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAShipRequest)
  // required .UAPack package = 1;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->package_, output);
  }

  // required int32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // optional string upsAccount = 4;
  if (has_upsaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsaccount().data(), this->upsaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAShipRequest.upsAccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->upsaccount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAShipRequest)
}

::google::protobuf::uint8* UAShipRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UAShipRequest)
  // required .UAPack package = 1;
  if (has_package()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->package_, false, target);
  }

  // required int32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // optional string upsAccount = 4;
  if (has_upsaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsaccount().data(), this->upsaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAShipRequest.upsAccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->upsaccount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAShipRequest)
  return target;
}

size_t UAShipRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAShipRequest)
  size_t total_size = 0;

  if (has_package()) {
    // required .UAPack package = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->package_);
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UAShipRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UAShipRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .UAPack package = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->package_);

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string upsAccount = 4;
  if (has_upsaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upsaccount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAShipRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAShipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UAShipRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UAShipRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAShipRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAShipRequest)
    MergeFrom(*source);
  }
}

void UAShipRequest::MergeFrom(const UAShipRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAShipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_upsaccount()) {
      set_has_upsaccount();
      upsaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsaccount_);
    }
    if (from.has_package()) {
      mutable_package()->::UAPack::MergeFrom(from.package());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void UAShipRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAShipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAShipRequest::CopyFrom(const UAShipRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAShipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAShipRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_package()) {
    if (!this->package_->IsInitialized()) return false;
  }
  return true;
}

void UAShipRequest::Swap(UAShipRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAShipRequest::InternalSwap(UAShipRequest* other) {
  upsaccount_.Swap(&other->upsaccount_);
  std::swap(package_, other->package_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAShipRequest::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAShipRequest

// required .UAPack package = 1;
bool UAShipRequest::has_package() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAShipRequest::set_has_package() {
  _has_bits_[0] |= 0x00000002u;
}
void UAShipRequest::clear_has_package() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAShipRequest::clear_package() {
  if (package_ != NULL) package_->::UAPack::Clear();
  clear_has_package();
}
const ::UAPack& UAShipRequest::package() const {
  // @@protoc_insertion_point(field_get:UAShipRequest.package)
  return package_ != NULL ? *package_
                         : *::UAPack::internal_default_instance();
}
::UAPack* UAShipRequest::mutable_package() {
  set_has_package();
  if (package_ == NULL) {
    package_ = new ::UAPack;
  }
  // @@protoc_insertion_point(field_mutable:UAShipRequest.package)
  return package_;
}
::UAPack* UAShipRequest::release_package() {
  // @@protoc_insertion_point(field_release:UAShipRequest.package)
  clear_has_package();
  ::UAPack* temp = package_;
  package_ = NULL;
  return temp;
}
void UAShipRequest::set_allocated_package(::UAPack* package) {
  delete package_;
  package_ = package;
  if (package) {
    set_has_package();
  } else {
    clear_has_package();
  }
  // @@protoc_insertion_point(field_set_allocated:UAShipRequest.package)
}

// required int32 x = 2;
bool UAShipRequest::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UAShipRequest::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void UAShipRequest::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void UAShipRequest::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 UAShipRequest::x() const {
  // @@protoc_insertion_point(field_get:UAShipRequest.x)
  return x_;
}
void UAShipRequest::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UAShipRequest.x)
}

// required int32 y = 3;
bool UAShipRequest::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UAShipRequest::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void UAShipRequest::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void UAShipRequest::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 UAShipRequest::y() const {
  // @@protoc_insertion_point(field_get:UAShipRequest.y)
  return y_;
}
void UAShipRequest::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UAShipRequest.y)
}

// optional string upsAccount = 4;
bool UAShipRequest::has_upsaccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAShipRequest::set_has_upsaccount() {
  _has_bits_[0] |= 0x00000001u;
}
void UAShipRequest::clear_has_upsaccount() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAShipRequest::clear_upsaccount() {
  upsaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upsaccount();
}
const ::std::string& UAShipRequest::upsaccount() const {
  // @@protoc_insertion_point(field_get:UAShipRequest.upsAccount)
  return upsaccount_.GetNoArena();
}
void UAShipRequest::set_upsaccount(const ::std::string& value) {
  set_has_upsaccount();
  upsaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UAShipRequest.upsAccount)
}
#if LANG_CXX11
void UAShipRequest::set_upsaccount(::std::string&& value) {
  set_has_upsaccount();
  upsaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UAShipRequest.upsAccount)
}
#endif
void UAShipRequest::set_upsaccount(const char* value) {
  set_has_upsaccount();
  upsaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UAShipRequest.upsAccount)
}
void UAShipRequest::set_upsaccount(const char* value, size_t size) {
  set_has_upsaccount();
  upsaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UAShipRequest.upsAccount)
}
::std::string* UAShipRequest::mutable_upsaccount() {
  set_has_upsaccount();
  // @@protoc_insertion_point(field_mutable:UAShipRequest.upsAccount)
  return upsaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UAShipRequest::release_upsaccount() {
  // @@protoc_insertion_point(field_release:UAShipRequest.upsAccount)
  clear_has_upsaccount();
  return upsaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UAShipRequest::set_allocated_upsaccount(::std::string* upsaccount) {
  if (upsaccount != NULL) {
    set_has_upsaccount();
  } else {
    clear_has_upsaccount();
  }
  upsaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upsaccount);
  // @@protoc_insertion_point(field_set_allocated:UAShipRequest.upsAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UATruckArrive::kTruckidFieldNumber;
const int UATruckArrive::kWhnumFieldNumber;
const int UATruckArrive::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UATruckArrive::UATruckArrive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UATruckArrive)
}
UATruckArrive::UATruckArrive(const UATruckArrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(shipid_));
  // @@protoc_insertion_point(copy_constructor:UATruckArrive)
}

void UATruckArrive::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&truckid_, 0, reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&truckid_) + sizeof(shipid_));
}

UATruckArrive::~UATruckArrive() {
  // @@protoc_insertion_point(destructor:UATruckArrive)
  SharedDtor();
}

void UATruckArrive::SharedDtor() {
}

void UATruckArrive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UATruckArrive::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[12].descriptor;
}

const UATruckArrive& UATruckArrive::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UATruckArrive* UATruckArrive::New(::google::protobuf::Arena* arena) const {
  UATruckArrive* n = new UATruckArrive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UATruckArrive::Clear() {
// @@protoc_insertion_point(message_clear_start:UATruckArrive)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&truckid_, 0, reinterpret_cast<char*>(&shipid_) -
      reinterpret_cast<char*>(&truckid_) + sizeof(shipid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UATruckArrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UATruckArrive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UATruckArrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UATruckArrive)
  return false;
#undef DO_
}

void UATruckArrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UATruckArrive)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 whnum = 2;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whnum(), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UATruckArrive)
}

::google::protobuf::uint8* UATruckArrive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UATruckArrive)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 whnum = 2;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whnum(), target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UATruckArrive)
  return target;
}

size_t UATruckArrive::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UATruckArrive)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_whnum()) {
    // required int32 whnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  return total_size;
}
size_t UATruckArrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UATruckArrive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 whnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UATruckArrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UATruckArrive)
  GOOGLE_DCHECK_NE(&from, this);
  const UATruckArrive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UATruckArrive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UATruckArrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UATruckArrive)
    MergeFrom(*source);
  }
}

void UATruckArrive::MergeFrom(const UATruckArrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UATruckArrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
  }
}

void UATruckArrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UATruckArrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UATruckArrive::CopyFrom(const UATruckArrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UATruckArrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UATruckArrive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UATruckArrive::Swap(UATruckArrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UATruckArrive::InternalSwap(UATruckArrive* other) {
  std::swap(truckid_, other->truckid_);
  std::swap(whnum_, other->whnum_);
  std::swap(shipid_, other->shipid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UATruckArrive::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UATruckArrive

// required int32 truckid = 1;
bool UATruckArrive::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UATruckArrive::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void UATruckArrive::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UATruckArrive::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 UATruckArrive::truckid() const {
  // @@protoc_insertion_point(field_get:UATruckArrive.truckid)
  return truckid_;
}
void UATruckArrive::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrive.truckid)
}

// required int32 whnum = 2;
bool UATruckArrive::has_whnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UATruckArrive::set_has_whnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UATruckArrive::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UATruckArrive::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 UATruckArrive::whnum() const {
  // @@protoc_insertion_point(field_get:UATruckArrive.whnum)
  return whnum_;
}
void UATruckArrive::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrive.whnum)
}

// required int64 shipid = 3;
bool UATruckArrive::has_shipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UATruckArrive::set_has_shipid() {
  _has_bits_[0] |= 0x00000004u;
}
void UATruckArrive::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000004u;
}
void UATruckArrive::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
::google::protobuf::int64 UATruckArrive::shipid() const {
  // @@protoc_insertion_point(field_get:UATruckArrive.shipid)
  return shipid_;
}
void UATruckArrive::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrive.shipid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AmazonCommands::kReqShipFieldNumber;
const int AmazonCommands::kReqDeliverTruckidFieldNumber;
const int AmazonCommands::kDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AmazonCommands::AmazonCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AmazonCommands)
}
AmazonCommands::AmazonCommands(const AmazonCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req_ship()) {
    req_ship_ = new ::UAShipRequest(*from.req_ship_);
  } else {
    req_ship_ = NULL;
  }
  ::memcpy(&req_deliver_truckid_, &from.req_deliver_truckid_,
    reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&req_deliver_truckid_) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:AmazonCommands)
}

void AmazonCommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&req_ship_, 0, reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&req_ship_) + sizeof(disconnect_));
}

AmazonCommands::~AmazonCommands() {
  // @@protoc_insertion_point(destructor:AmazonCommands)
  SharedDtor();
}

void AmazonCommands::SharedDtor() {
  if (this != internal_default_instance()) {
    delete req_ship_;
  }
}

void AmazonCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AmazonCommands::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[13].descriptor;
}

const AmazonCommands& AmazonCommands::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

AmazonCommands* AmazonCommands::New(::google::protobuf::Arena* arena) const {
  AmazonCommands* n = new AmazonCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AmazonCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AmazonCommands)
  if (has_req_ship()) {
    GOOGLE_DCHECK(req_ship_ != NULL);
    req_ship_->::UAShipRequest::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&req_deliver_truckid_, 0, reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&req_deliver_truckid_) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AmazonCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AmazonCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UAShipRequest req_ship = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req_ship()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 req_deliver_truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_req_deliver_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_deliver_truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AmazonCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AmazonCommands)
  return false;
#undef DO_
}

void AmazonCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AmazonCommands)
  // optional .UAShipRequest req_ship = 1;
  if (has_req_ship()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->req_ship_, output);
  }

  // optional int32 req_deliver_truckid = 2;
  if (has_req_deliver_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->req_deliver_truckid(), output);
  }

  // optional bool disconnect = 3;
  if (has_disconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->disconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AmazonCommands)
}

::google::protobuf::uint8* AmazonCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AmazonCommands)
  // optional .UAShipRequest req_ship = 1;
  if (has_req_ship()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->req_ship_, false, target);
  }

  // optional int32 req_deliver_truckid = 2;
  if (has_req_deliver_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->req_deliver_truckid(), target);
  }

  // optional bool disconnect = 3;
  if (has_disconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->disconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AmazonCommands)
  return target;
}

size_t AmazonCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AmazonCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .UAShipRequest req_ship = 1;
    if (has_req_ship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->req_ship_);
    }

    // optional int32 req_deliver_truckid = 2;
    if (has_req_deliver_truckid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->req_deliver_truckid());
    }

    // optional bool disconnect = 3;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AmazonCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AmazonCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const AmazonCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AmazonCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AmazonCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AmazonCommands)
    MergeFrom(*source);
  }
}

void AmazonCommands::MergeFrom(const AmazonCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AmazonCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_req_ship()) {
      mutable_req_ship()->::UAShipRequest::MergeFrom(from.req_ship());
    }
    if (from.has_req_deliver_truckid()) {
      set_req_deliver_truckid(from.req_deliver_truckid());
    }
    if (from.has_disconnect()) {
      set_disconnect(from.disconnect());
    }
  }
}

void AmazonCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AmazonCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmazonCommands::CopyFrom(const AmazonCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AmazonCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmazonCommands::IsInitialized() const {
  if (has_req_ship()) {
    if (!this->req_ship_->IsInitialized()) return false;
  }
  return true;
}

void AmazonCommands::Swap(AmazonCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AmazonCommands::InternalSwap(AmazonCommands* other) {
  std::swap(req_ship_, other->req_ship_);
  std::swap(req_deliver_truckid_, other->req_deliver_truckid_);
  std::swap(disconnect_, other->disconnect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AmazonCommands::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AmazonCommands

// optional .UAShipRequest req_ship = 1;
bool AmazonCommands::has_req_ship() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AmazonCommands::set_has_req_ship() {
  _has_bits_[0] |= 0x00000001u;
}
void AmazonCommands::clear_has_req_ship() {
  _has_bits_[0] &= ~0x00000001u;
}
void AmazonCommands::clear_req_ship() {
  if (req_ship_ != NULL) req_ship_->::UAShipRequest::Clear();
  clear_has_req_ship();
}
const ::UAShipRequest& AmazonCommands::req_ship() const {
  // @@protoc_insertion_point(field_get:AmazonCommands.req_ship)
  return req_ship_ != NULL ? *req_ship_
                         : *::UAShipRequest::internal_default_instance();
}
::UAShipRequest* AmazonCommands::mutable_req_ship() {
  set_has_req_ship();
  if (req_ship_ == NULL) {
    req_ship_ = new ::UAShipRequest;
  }
  // @@protoc_insertion_point(field_mutable:AmazonCommands.req_ship)
  return req_ship_;
}
::UAShipRequest* AmazonCommands::release_req_ship() {
  // @@protoc_insertion_point(field_release:AmazonCommands.req_ship)
  clear_has_req_ship();
  ::UAShipRequest* temp = req_ship_;
  req_ship_ = NULL;
  return temp;
}
void AmazonCommands::set_allocated_req_ship(::UAShipRequest* req_ship) {
  delete req_ship_;
  req_ship_ = req_ship;
  if (req_ship) {
    set_has_req_ship();
  } else {
    clear_has_req_ship();
  }
  // @@protoc_insertion_point(field_set_allocated:AmazonCommands.req_ship)
}

// optional int32 req_deliver_truckid = 2;
bool AmazonCommands::has_req_deliver_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AmazonCommands::set_has_req_deliver_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
void AmazonCommands::clear_has_req_deliver_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AmazonCommands::clear_req_deliver_truckid() {
  req_deliver_truckid_ = 0;
  clear_has_req_deliver_truckid();
}
::google::protobuf::int32 AmazonCommands::req_deliver_truckid() const {
  // @@protoc_insertion_point(field_get:AmazonCommands.req_deliver_truckid)
  return req_deliver_truckid_;
}
void AmazonCommands::set_req_deliver_truckid(::google::protobuf::int32 value) {
  set_has_req_deliver_truckid();
  req_deliver_truckid_ = value;
  // @@protoc_insertion_point(field_set:AmazonCommands.req_deliver_truckid)
}

// optional bool disconnect = 3;
bool AmazonCommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AmazonCommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000004u;
}
void AmazonCommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000004u;
}
void AmazonCommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
bool AmazonCommands::disconnect() const {
  // @@protoc_insertion_point(field_get:AmazonCommands.disconnect)
  return disconnect_;
}
void AmazonCommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:AmazonCommands.disconnect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UPSResponses::kRespTruckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UPSResponses::UPSResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UPSResponses)
}
UPSResponses::UPSResponses(const UPSResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resp_truck()) {
    resp_truck_ = new ::UATruckArrive(*from.resp_truck_);
  } else {
    resp_truck_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:UPSResponses)
}

void UPSResponses::SharedCtor() {
  _cached_size_ = 0;
  resp_truck_ = NULL;
}

UPSResponses::~UPSResponses() {
  // @@protoc_insertion_point(destructor:UPSResponses)
  SharedDtor();
}

void UPSResponses::SharedDtor() {
  if (this != internal_default_instance()) {
    delete resp_truck_;
  }
}

void UPSResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UPSResponses::descriptor() {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[14].descriptor;
}

const UPSResponses& UPSResponses::default_instance() {
  protobuf_amazon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UPSResponses* UPSResponses::New(::google::protobuf::Arena* arena) const {
  UPSResponses* n = new UPSResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UPSResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:UPSResponses)
  if (has_resp_truck()) {
    GOOGLE_DCHECK(resp_truck_ != NULL);
    resp_truck_->::UATruckArrive::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UPSResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UPSResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UATruckArrive resp_truck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resp_truck()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UPSResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UPSResponses)
  return false;
#undef DO_
}

void UPSResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UPSResponses)
  // optional .UATruckArrive resp_truck = 1;
  if (has_resp_truck()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resp_truck_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UPSResponses)
}

::google::protobuf::uint8* UPSResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UPSResponses)
  // optional .UATruckArrive resp_truck = 1;
  if (has_resp_truck()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->resp_truck_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UPSResponses)
  return target;
}

size_t UPSResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UPSResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .UATruckArrive resp_truck = 1;
  if (has_resp_truck()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_truck_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UPSResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UPSResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const UPSResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UPSResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UPSResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UPSResponses)
    MergeFrom(*source);
  }
}

void UPSResponses::MergeFrom(const UPSResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UPSResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resp_truck()) {
    mutable_resp_truck()->::UATruckArrive::MergeFrom(from.resp_truck());
  }
}

void UPSResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UPSResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UPSResponses::CopyFrom(const UPSResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UPSResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UPSResponses::IsInitialized() const {
  if (has_resp_truck()) {
    if (!this->resp_truck_->IsInitialized()) return false;
  }
  return true;
}

void UPSResponses::Swap(UPSResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UPSResponses::InternalSwap(UPSResponses* other) {
  std::swap(resp_truck_, other->resp_truck_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UPSResponses::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UPSResponses

// optional .UATruckArrive resp_truck = 1;
bool UPSResponses::has_resp_truck() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UPSResponses::set_has_resp_truck() {
  _has_bits_[0] |= 0x00000001u;
}
void UPSResponses::clear_has_resp_truck() {
  _has_bits_[0] &= ~0x00000001u;
}
void UPSResponses::clear_resp_truck() {
  if (resp_truck_ != NULL) resp_truck_->::UATruckArrive::Clear();
  clear_has_resp_truck();
}
const ::UATruckArrive& UPSResponses::resp_truck() const {
  // @@protoc_insertion_point(field_get:UPSResponses.resp_truck)
  return resp_truck_ != NULL ? *resp_truck_
                         : *::UATruckArrive::internal_default_instance();
}
::UATruckArrive* UPSResponses::mutable_resp_truck() {
  set_has_resp_truck();
  if (resp_truck_ == NULL) {
    resp_truck_ = new ::UATruckArrive;
  }
  // @@protoc_insertion_point(field_mutable:UPSResponses.resp_truck)
  return resp_truck_;
}
::UATruckArrive* UPSResponses::release_resp_truck() {
  // @@protoc_insertion_point(field_release:UPSResponses.resp_truck)
  clear_has_resp_truck();
  ::UATruckArrive* temp = resp_truck_;
  resp_truck_ = NULL;
  return temp;
}
void UPSResponses::set_allocated_resp_truck(::UATruckArrive* resp_truck) {
  delete resp_truck_;
  resp_truck_ = resp_truck;
  if (resp_truck) {
    set_has_resp_truck();
  } else {
    clear_has_resp_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:UPSResponses.resp_truck)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
